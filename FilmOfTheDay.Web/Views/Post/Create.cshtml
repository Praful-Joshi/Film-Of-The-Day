@model FilmOfTheDay.Web.Models.Post.CreatePostViewModel
@{
    ViewData["Title"] = "Create Post";
}

<div class="max-w-4xl mx-auto px-4 py-8 space-y-6">

    <!-- Search Form -->
    <form asp-action="SearchMovie" method="post" class="flex space-x-2">
        <input asp-for="SearchQuery" placeholder="Search movie or TV show..." 
               class="flex-1 border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition">Search</button>
    </form>

    <!-- Search Results -->
    @if (Model.SearchResults != null && Model.SearchResults.Any())
    {
        <h5 class="text-gray-700 font-semibold">Select a film:</h5>

        <div id="movieGrid" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-6 gap-4">
            @foreach (var movie in Model.SearchResults)
            {
                <div class="movie-card hidden cursor-pointer">
                    <div class="movie-select-card rounded overflow-hidden shadow hover:shadow-lg transition"
                         data-title="@movie.Title" 
                         data-poster="@movie.PosterUrl" 
                         data-link="@movie.MovieUrl">
                        <img src="@movie.PosterUrl" 
                             onerror="this.onerror=null;this.src='/images/placeholder.svg';"
                             class="w-full object-cover h-60 sm:h-60 md:h-40 lg:h-40" />
                        <div class="text-center text-sm mt-1 font-medium text-gray-800">@movie.Title</div>
                    </div>
                </div>
            }
        </div>

        <div class="text-center mt-3">
            <button id="toggleBtn" type="button" class="text-gray-600 border border-gray-300 px-3 py-1 rounded hover:bg-gray-100 transition">Show more</button>
        </div>
    }

    <!-- Create Post Form -->
    <form asp-action="Create" method="post" class="space-y-4 mt-4">
        <input type="hidden" id="SelectedMovieTitle" name="SelectedMovieTitle" />
        <input type="hidden" id="SelectedMoviePosterUrl" name="SelectedMoviePosterUrl" />
        <input type="hidden" id="SelectedMovieLink" name="SelectedMovieLink" />

        <div class="flex flex-col">
            <label asp-for="Title" class="mb-1 font-medium text-gray-700">Title</label>
            <input asp-for="Title" class="border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
        </div>

        <div class="flex flex-col">
            <label asp-for="Description" class="mb-1 font-medium text-gray-700">Description</label>
            <textarea asp-for="Description" class="border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
        </div>

        <button type="submit" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition">Create Post</button>
    </form>
</div>

@section Scripts {
<script>
    let selectedCard = null;
    let expanded = false;

    const movieCards = document.querySelectorAll('.movie-card');
    const toggleBtn = document.getElementById('toggleBtn');

    const inputTitle = document.getElementById('SelectedMovieTitle');
    const inputPoster = document.getElementById('SelectedMoviePosterUrl');
    const inputLink = document.getElementById('SelectedMovieLink');

    function selectCard(card) {
        if (selectedCard) {
            selectedCard.querySelector('.movie-select-card').classList.remove('bg-green-400');
        }
        selectedCard = card.closest('.movie-card');
        selectedCard.querySelector('.movie-select-card').classList.add('bg-green-400');

        inputTitle.value = card.dataset.title || '';
        inputPoster.value = card.dataset.poster || '';
        inputLink.value = card.dataset.link || '';
    }

    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.movie-select-card').forEach(card => {
            card.addEventListener('click', () => selectCard(card));
        });
        updateVisibleMovies();
    });

    function getVisibleCount() {
        return window.innerWidth < 768 ? 4 : 12;
    }

    function updateVisibleMovies() {
        const visibleCount = getVisibleCount();
        movieCards.forEach((card, index) => {
            card.classList.toggle('hidden', !expanded && index >= visibleCount);
        });
        if (toggleBtn)
            toggleBtn.textContent = expanded ? 'Show less' : 'Show more';
    }

    window.addEventListener('resize', () => { if (!expanded) updateVisibleMovies(); });
    toggleBtn?.addEventListener('click', () => { expanded = !expanded; updateVisibleMovies(); });
</script>
}
